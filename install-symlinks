#!/usr/bin/env perl
use strict;
use warnings;
use utf8;

# gnu_compat: --opt="..." is allowed.
# no_bundling: single character option is not bundled.
# no_ignore_case: no ignore case on long option.
use Getopt::Long qw(:config gnu_compat no_bundling no_ignore_case);
use Pod::Usage qw(pod2usage);
use File::Spec::Functions qw(catfile rel2abs);
use File::Path qw(rmtree);

use FindBin ();
use lib "$FindBin::Bin/lib";
use Dotfiles::Util;

### sub ###
sub usage () {
    pod2usage(-verbose => 2);
}


### main ###
my $needhelp;
my $home;
my $username;
my $force_overwrite = 0;
my $verbose = 0;
my $config_file = 'files.yaml';
GetOptions(
    'h|help'
        => \$needhelp,
    'u|username=s'
        => \$username,
    'c|config-file=s'
        => \$config_file,
    'f|force'
        => \$force_overwrite,
    'v|verbose'
        => \$verbose,
) or usage;
usage if $needhelp;


if (defined $username) {
    $home = get_home_from_user $username;
}
else {
    ($username, $home) = determine_user_and_home;
}

my $c = load_config($config_file);

my @files = map { convert_filename $c, $_ } @{$c->{files}};

# For test, check if file exists before installing.
unless ($force_overwrite) {
    my $exists = 0;
    for my $file (@files) {
        my $dest = catfile($home, $file);
        if (-e $dest) {
            warn "install-symlinks: File exists '$dest'.\n";
            $exists = 1;
        }
    }
    exit 1 if $exists;
}

# Install symbolic links.
# but if path $dest exists even if $force_overwrite == 0
# (maybe problem like race condition), exit with error.
for my $file (@files) {
    my ($src, $dest);

    $src  = rel2abs(catfile($c->{directory}, $file));
    $dest = catfile($home, $file);

    if (-e $dest) {
        unless ($force_overwrite) {
            # checked but file exists?
            die "install-symlinks: File exists '$dest'.\n";
        }
        rmtree($dest);
    }
    say("$src -> $dest") if $verbose;
    install_symlink $src, $dest, $username;
}





__END__

=head1 NAME

    install-symlinks - NO DESCRIPTION YET.


=head1 SYNOPSIS


=head1 OPTIONS


=head1 AUTHOR

tyru <tyru.exe@gmail.com>
